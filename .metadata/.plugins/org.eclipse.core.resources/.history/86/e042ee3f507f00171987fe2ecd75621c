#include<stdio.h>
#include <unistd.h>
#include  <string.h>
#include  <sys/types.h>
#include  <sys/wait.h>
#include <stdlib.h>

int main()
{
	int pid,pid2;
	char buf[256];
	int fd1[2];  // Used to store two ends of first pipe
	    int fd2[2];  // Used to store two ends of second pipe

	    if (pipe(fd1)==-1)
	    {
	        fprintf(stderr, "Pipe 1 Failed" );
	        return 1;
	    }
	    if (pipe(fd2)==-1)
	    {
	        fprintf(stderr, "Pipe 2 Failed" );
	        return 1;
	    }
	if((pid=fork()) == 0)
	{
		write(1,"1",1);
		//dup2(fd1[1],1);
		write(1,"2",1);
		/*close(fd1[0]); // Close reading end of first pipe
		close(fd1[1]);*/
		if (execlp("ls", "ls", NULL) < 0) /* first child runs “ls” */
			perror("execlp ls");
		write(1,"3",1);
		exit(0);

	}
	else if((pid2=fork())==0)
	{

			write(1,"6",1);
			//dup2(0,fd1[0]);
				/*close(fd1[0]); // Close reading end of first pipe
				close(fd1[1]);*/
			if (execlp("wc", "wc", "-l", NULL) < 0) /*second child runs wc” */
				perror("execlp wc");
			write(1,"7",1);
			exit(0);

	}
	else
	{
		write(1,"abc",3);
		write(1,"4",1);
		wait(0);
		wait(0);
		write(1,"5",1);

	}

	return 0;


}
