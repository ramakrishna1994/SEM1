#include<stdio.h>
#include <unistd.h>
#include  <string.h>
#include  <sys/types.h>
#include  <sys/wait.h>

int main()
{
	int pid=fork();
	char buf[256];
	int fd1[2];  // Used to store two ends of first pipe
	    int fd2[2];  // Used to store two ends of second pipe

	    if (pipe(fd1)==-1)
	    {
	        fprintf(stderr, "Pipe 1 Failed" );
	        return 1;
	    }
	    if (pipe(fd2)==-1)
	    {
	        fprintf(stderr, "Pipe 2 Failed" );
	        return 1;
	    }
	if(pid == 0)
	{

		dup2(fd1[1],1);

		close(fd1[0]);  // Close reading end of first pipe
		if (execlp("ls", "ls", NULL) == -1) /* first child runs “ls” */
			perror("execlp ls");
		exit(0);

	}
	else
	{
		int pid2 = fork();
		if(pid2 == 0)
		{

			if (execlp("wc", "wc", "-l", NULL) == -1) /*second child runs wc” */
				perror("execlp wc");
			exit(0);

		}
		else
		{
			wait(0);
			wait(0);
			sprintf(buf, "This line is from pid %d parent\n", pid);
						write(1, buf, strlen(buf));
		}

	}
}
