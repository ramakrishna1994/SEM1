#include <stdio.h>
#include <stdlib.h>
#include "dictionary.h"

char word[100][20]={'0'};
char meaning[100][3][100]={'0'};
char noofmeaningsforword[100]={'0'};
int noofkeys=0;

insert_out *insert_proc_1_svc(common_in *in,struct svc_req *rqstp)
{
	static insert_out outp;
	int temp;

	int index = search(in->word);
		if(index == -1)
		{
			printf("Key doesn't exists!!\n");
			strcpy(word[noofkeys],in->word);
			strcpy(meaning[noofkeys][noofmeaningsforword[index]],in->meaning);
			noofmeaningsforword[index]++;
			noofkeys++;
			printf("Word successfully added to dictionary!!\n");
		}
		else
		{
			printf("Key exists at index %d!!\n",index);

		}

	printf("elements are :");
	for(int i=0;i<10;i++)
	{
		printf("%d",in->unsortedarray[i]);
	}
	for(int i=0;i<10;i++)
	{
		for(int j=i;j<10;j++)
		{
			if((in->unsortedarray[i])<(in->unsortedarray[j]))
			{
				
				temp=in->unsortedarray[i];
				in->unsortedarray[i]=in->unsortedarray[j];
				in->unsortedarray[j]=temp;
				
			}
		}
	}
	for(int i=0;i<10;i++)
	{
		outp.sortedarray[i]=in->unsortedarray[i];
	}
	return (&outp);
}

int search(char *searchkey)
{
	for(int i=0;i<noofkeys;i++)
	{
		printf("%s\n",word[i]);
		if(strcmp(searchkey,word[i]) == 0)
		{
			return i;
		}
	}
	return -1;
}

